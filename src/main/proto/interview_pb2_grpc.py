# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from src.main.proto import interview_pb2 as src_dot_main_dot_proto_dot_interview__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in src/main/proto/interview_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class InterviewServiceStub(object):
    """Interview Service - Main gRPC service for interview functionality
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartInterview = channel.unary_unary(
                '/com.interview.grpc.InterviewService/StartInterview',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.StartInterviewRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.StartInterviewResponse.FromString,
                _registered_method=True)
        self.ProcessAudio = channel.unary_unary(
                '/com.interview.grpc.InterviewService/ProcessAudio',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.ProcessAudioRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.ProcessAudioResponse.FromString,
                _registered_method=True)
        self.GenerateSpeech = channel.unary_unary(
                '/com.interview.grpc.InterviewService/GenerateSpeech',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSpeechRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSpeechResponse.FromString,
                _registered_method=True)
        self.FinishInterview = channel.unary_unary(
                '/com.interview.grpc.InterviewService/FinishInterview',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.FinishInterviewRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.FinishInterviewResponse.FromString,
                _registered_method=True)
        self.GetInterviewQuestions = channel.unary_unary(
                '/com.interview.grpc.InterviewService/GetInterviewQuestions',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.GetQuestionsRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GetQuestionsResponse.FromString,
                _registered_method=True)


class InterviewServiceServicer(object):
    """Interview Service - Main gRPC service for interview functionality
    """

    def StartInterview(self, request, context):
        """Start a new interview session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessAudio(self, request, context):
        """Send audio for transcription and get follow-up question
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateSpeech(self, request, context):
        """Generate text-to-speech for interviewer questions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishInterview(self, request, context):
        """Finish interview session and combine recordings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInterviewQuestions(self, request, context):
        """Get interview questions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InterviewServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartInterview': grpc.unary_unary_rpc_method_handler(
                    servicer.StartInterview,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.StartInterviewRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.StartInterviewResponse.SerializeToString,
            ),
            'ProcessAudio': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessAudio,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.ProcessAudioRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.ProcessAudioResponse.SerializeToString,
            ),
            'GenerateSpeech': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateSpeech,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSpeechRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSpeechResponse.SerializeToString,
            ),
            'FinishInterview': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishInterview,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.FinishInterviewRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.FinishInterviewResponse.SerializeToString,
            ),
            'GetInterviewQuestions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInterviewQuestions,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GetQuestionsRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.GetQuestionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.interview.grpc.InterviewService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.interview.grpc.InterviewService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InterviewService(object):
    """Interview Service - Main gRPC service for interview functionality
    """

    @staticmethod
    def StartInterview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.InterviewService/StartInterview',
            src_dot_main_dot_proto_dot_interview__pb2.StartInterviewRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.StartInterviewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessAudio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.InterviewService/ProcessAudio',
            src_dot_main_dot_proto_dot_interview__pb2.ProcessAudioRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.ProcessAudioResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.InterviewService/GenerateSpeech',
            src_dot_main_dot_proto_dot_interview__pb2.GenerateSpeechRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.GenerateSpeechResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FinishInterview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.InterviewService/FinishInterview',
            src_dot_main_dot_proto_dot_interview__pb2.FinishInterviewRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.FinishInterviewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInterviewQuestions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.InterviewService/GetInterviewQuestions',
            src_dot_main_dot_proto_dot_interview__pb2.GetQuestionsRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.GetQuestionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class InterviewStreamServiceStub(object):
    """WebSocket-like streaming service for real-time communication
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InterviewStream = channel.stream_stream(
                '/com.interview.grpc.InterviewStreamService/InterviewStream',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.InterviewMessage.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.InterviewMessage.FromString,
                _registered_method=True)


class InterviewStreamServiceServicer(object):
    """WebSocket-like streaming service for real-time communication
    """

    def InterviewStream(self, request_iterator, context):
        """Bidirectional streaming for real-time interview
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InterviewStreamServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InterviewStream': grpc.stream_stream_rpc_method_handler(
                    servicer.InterviewStream,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.InterviewMessage.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.InterviewMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.interview.grpc.InterviewStreamService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.interview.grpc.InterviewStreamService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InterviewStreamService(object):
    """WebSocket-like streaming service for real-time communication
    """

    @staticmethod
    def InterviewStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/com.interview.grpc.InterviewStreamService/InterviewStream',
            src_dot_main_dot_proto_dot_interview__pb2.InterviewMessage.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.InterviewMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class FileServiceStub(object):
    """File Management Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadAudio = channel.stream_unary(
                '/com.interview.grpc.FileService/UploadAudio',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.AudioChunk.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.UploadResponse.FromString,
                _registered_method=True)
        self.UploadVideo = channel.stream_unary(
                '/com.interview.grpc.FileService/UploadVideo',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.VideoChunk.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.UploadResponse.FromString,
                _registered_method=True)
        self.DownloadFile = channel.unary_stream(
                '/com.interview.grpc.FileService/DownloadFile',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.DownloadRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.FileChunk.FromString,
                _registered_method=True)
        self.ListRecordings = channel.unary_unary(
                '/com.interview.grpc.FileService/ListRecordings',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.ListRecordingsRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.ListRecordingsResponse.FromString,
                _registered_method=True)
        self.GetSessionRecordings = channel.unary_unary(
                '/com.interview.grpc.FileService/GetSessionRecordings',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.GetSessionRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GetSessionResponse.FromString,
                _registered_method=True)


class FileServiceServicer(object):
    """File Management Service
    """

    def UploadAudio(self, request_iterator, context):
        """Upload audio file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadVideo(self, request_iterator, context):
        """Upload video file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Download file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRecordings(self, request, context):
        """List recordings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSessionRecordings(self, request, context):
        """Get session recordings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadAudio': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadAudio,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.AudioChunk.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.UploadResponse.SerializeToString,
            ),
            'UploadVideo': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadVideo,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.VideoChunk.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.UploadResponse.SerializeToString,
            ),
            'DownloadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.DownloadRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.FileChunk.SerializeToString,
            ),
            'ListRecordings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRecordings,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.ListRecordingsRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.ListRecordingsResponse.SerializeToString,
            ),
            'GetSessionRecordings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSessionRecordings,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GetSessionRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.GetSessionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.interview.grpc.FileService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.interview.grpc.FileService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FileService(object):
    """File Management Service
    """

    @staticmethod
    def UploadAudio(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/com.interview.grpc.FileService/UploadAudio',
            src_dot_main_dot_proto_dot_interview__pb2.AudioChunk.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.UploadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadVideo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/com.interview.grpc.FileService/UploadVideo',
            src_dot_main_dot_proto_dot_interview__pb2.VideoChunk.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.UploadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/com.interview.grpc.FileService/DownloadFile',
            src_dot_main_dot_proto_dot_interview__pb2.DownloadRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.FileChunk.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRecordings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.FileService/ListRecordings',
            src_dot_main_dot_proto_dot_interview__pb2.ListRecordingsRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.ListRecordingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSessionRecordings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.FileService/GetSessionRecordings',
            src_dot_main_dot_proto_dot_interview__pb2.GetSessionRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.GetSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class VideoServiceStub(object):
    """Video Processing Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AnnotateVideo = channel.unary_unary(
                '/com.interview.grpc.VideoService/AnnotateVideo',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.AnnotateVideoRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.AnnotateVideoResponse.FromString,
                _registered_method=True)
        self.GenerateSubtitles = channel.unary_unary(
                '/com.interview.grpc.VideoService/GenerateSubtitles',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSubtitlesRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSubtitlesResponse.FromString,
                _registered_method=True)
        self.CreateEnhancedVideo = channel.unary_unary(
                '/com.interview.grpc.VideoService/CreateEnhancedVideo',
                request_serializer=src_dot_main_dot_proto_dot_interview__pb2.CreateEnhancedVideoRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_interview__pb2.CreateEnhancedVideoResponse.FromString,
                _registered_method=True)


class VideoServiceServicer(object):
    """Video Processing Service
    """

    def AnnotateVideo(self, request, context):
        """Annotate video with overlays
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateSubtitles(self, request, context):
        """Generate subtitles for video
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEnhancedVideo(self, request, context):
        """Create enhanced video with multiple features
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VideoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AnnotateVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.AnnotateVideo,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.AnnotateVideoRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.AnnotateVideoResponse.SerializeToString,
            ),
            'GenerateSubtitles': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateSubtitles,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSubtitlesRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.GenerateSubtitlesResponse.SerializeToString,
            ),
            'CreateEnhancedVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEnhancedVideo,
                    request_deserializer=src_dot_main_dot_proto_dot_interview__pb2.CreateEnhancedVideoRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_interview__pb2.CreateEnhancedVideoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.interview.grpc.VideoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.interview.grpc.VideoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VideoService(object):
    """Video Processing Service
    """

    @staticmethod
    def AnnotateVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.VideoService/AnnotateVideo',
            src_dot_main_dot_proto_dot_interview__pb2.AnnotateVideoRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.AnnotateVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateSubtitles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.VideoService/GenerateSubtitles',
            src_dot_main_dot_proto_dot_interview__pb2.GenerateSubtitlesRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.GenerateSubtitlesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEnhancedVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.interview.grpc.VideoService/CreateEnhancedVideo',
            src_dot_main_dot_proto_dot_interview__pb2.CreateEnhancedVideoRequest.SerializeToString,
            src_dot_main_dot_proto_dot_interview__pb2.CreateEnhancedVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
